---
description: 
globs: 
alwaysApply: false
---
# README.md 작성 규칙

## 메타데이터
```yaml
name: README.md 작성 규칙
description: 프로젝트의 README.md 파일 작성에 대한 규칙과 가이드라인을 정의합니다. 프로젝트 구조, 설치 방법, 실행 방법, 컴포넌트 설명 등을 포함한 문서화 표준을 제공합니다.
globs:
  - "**/README.md"
  - "docs/**/README.md"
  - "**/docs/README.md"
```

## 0. 작성 전 확인사항

### 사용자 확인 필요 사항
- **실행 환경**
  - 지원 OS 및 버전
  - 크로스 플랫폼 지원 여부
  - 하드웨어 요구사항
  - 네트워크 요구사항

- **사전 요구사항**
  - 프로그래밍 언어 버전
  - 데이터베이스 요구사항
  - 외부 서비스 의존성
  - 권한 요구사항

### AI 자동 확인 사항
- **환경 설정 파일 분석**
  - 설정 파일 위치 및 형식
  - 필수/선택 환경 변수
  - 기본값 및 예시
  - 설정 파일 템플릿

- **실행 방법 분석**
  - 실행 파일 및 옵션
  - 서비스 실행 방식
  - 디버그 모드 실행
  - 환경별 실행 방법

- **컴포넌트 구조 분석**
  - 주요 컴포넌트 및 역할
  - 아키텍처 패턴
  - 의존성 관계
  - 확장 포인트

## 1. 기본 구조

### 1.1 개요
- 프로젝트의 목적과 주요 기능을 간단히 설명
- 핵심 특징과 장점을 나열
- 사용 사례와 적용 분야 언급
- 기술 스택 요약

### 1.2 주요 기능
- 핵심 기능을 bullet point로 나열
- 각 기능의 간단한 설명 포함
- 주요 기술 스택 언급
- 기능별 상세 설명

### 1.3 전체 구조
- 프로젝트의 디렉토리 구조를 트리 형태로 표현
- 각 디렉토리와 파일의 역할 설명
- 아키텍처 다이어그램 포함
- 컴포넌트 간 관계 설명

## 2. 설치 및 실행

### 2.1 사전 요구사항
- 필요한 소프트웨어와 버전
- 시스템 요구사항
- 의존성 패키지
- 권한 요구사항

### 2.2 설치 방법
- 소스 코드 다운로드/클론 방법
- 의존성 설치 방법
- 환경 설정 방법
- 초기 설정 방법

### 2.3 실행 방법
- 기본 실행 명령어
- 실행 옵션 설명
- 서비스로 실행하는 방법
- 디버그 모드 실행 방법

## 3. 컴포넌트 설명

### 3.1 핵심 컴포넌트
- 각 컴포넌트의 역할과 책임
- 주요 기능과 동작 방식
- 사용 예시
- 설정 방법

### 3.2 데이터 흐름
- 컴포넌트 간 데이터 흐름
- 이벤트 처리 방식
- 상태 관리 방법
- 동시성 처리

### 3.3 확장 포인트
- 플러그인 시스템
- 커스터마이징 방법
- API 사용법
- 확장 예시

## 4. 실행 흐름

### 4.1 초기화 과정
- 시작 시 수행되는 작업
- 설정 로드 과정
- 리소스 초기화
- 오류 처리

### 4.2 정상 동작
- 주요 실행 시나리오
  - 시퀀스 다이어그램으로 표현
  - 컴포넌트 간 상호작용
  - 메시지 흐름
  - 상태 변화
  - 오류 처리

- 시각화 규칙
  ```mermaid
  sequenceDiagram
    participant Server
    participant Client
    participant ProcessManager
    participant RepositoryManager
    
    Note over Server,RepositoryManager: 초기화
    Server->>Client: 연결 요청
    Client->>Server: 연결 응답
    
    Note over Server,RepositoryManager: 정상 동작
    Server->>Client: 명령 전송
    Client->>ProcessManager: 작업 요청
    ProcessManager->>RepositoryManager: 저장소 동기화
    RepositoryManager-->>ProcessManager: 동기화 완료
    ProcessManager-->>Client: 작업 결과
    Client-->>Server: 상태 보고
    
    Note over Server,RepositoryManager: 오류 처리
    Server->>Client: 오류 발생
    Client->>ProcessManager: 복구 요청
    ProcessManager-->>Client: 복구 결과
    Client-->>Server: 복구 상태 보고
  ```

- 다이어그램 작성 가이드
  - 컴포넌트 간 관계 명확히 표현
  - 메시지 흐름 시간순으로 배치
  - 오류 처리 경로 포함
  - 상태 변화 시각화
  - 주석으로 단계 구분

### 4.3 종료 처리
- 정상 종료 과정
- 리소스 정리
- 로그 기록
- 상태 저장

## 5. 메시지 정의

### 5.1 클라이언트 → 서버
- 각 메시지 타입별 정의
- 필수/선택 필드 설명
- 예시 JSON 포함
- 필드 설명

### 5.2 서버 → 클라이언트
- 각 메시지 타입별 정의
- 필수/선택 필드 설명
- 예시 JSON 포함
- 필드 설명

### 5.3 공통 필드
- 공통으로 사용되는 필드 정의
- 데이터 타입 및 제약사항
- 사용 예시
- 버전 관리

## 6. 예외 처리

### 6.1 오류 유형
- 예상되는 오류 상황
- 오류 코드 및 메시지
- 심각도 수준
- 발생 조건

### 6.2 복구 전략
- 자동 복구 방법
- 수동 개입 필요 상황
- 모니터링 포인트
- 재시도 정책

### 6.3 로깅
- 로그 레벨 정의
- 로그 포맷
- 로그 저장 및 관리
- 로그 분석 방법

## 7. 추가 정보

### 7.1 환경 설정
- 환경 변수 파일 규칙
  - 프로젝트에 포함된 환경 변수 파일 사용
  - 파일 이름과 위치 명시
  - 필수 환경 변수 목록
  - 각 변수의 용도와 예시값

- 환경 변수 설정 방법
  - 기존 환경 변수 파일 수정
  - 실제 환경에 맞는 값 설정
  - 보안 관련 주의사항
  - 환경별 설정 가이드

- 환경 변수 검증
  - 필수 변수 존재 확인
  - 값 형식 검증
  - 기본값 처리
  - 오류 메시지

### 7.2 로깅
- 로그 파일 위치
- 로그 레벨 설정
- 로그 포맷
- 로그 로테이션

### 7.3 주의사항
- 알려진 이슈
- 제한사항
- 보안 고려사항
- 성능 고려사항

## 8. 작성 규칙

### 8.1 문서화 원칙
- 명확하고 간결한 설명
- 실제 예시 포함
- 최신 상태 유지
- 일관된 포맷팅

### 8.2 코드 예시
- 실행 가능한 코드 스니펫
- 주석 포함
- 예외 처리 포함
- 환경별 예시

### 8.3 다이어그램
- 구조도
- 시퀀스 다이어그램
- 상태 다이어그램
- 컴포넌트 관계도

## 9. 유지보수

### 9.1 버전 관리
- 버전 번호 체계
- 변경 이력 관리
- 호환성 정책
- 업그레이드 가이드

### 9.2 업데이트
- 업데이트 방법
- 롤백 절차
- 데이터 마이그레이션
- 설정 변경

### 9.3 모니터링
- 상태 확인 방법
- 성능 모니터링
- 알림 설정
- 문제 해결 가이드

## 10. 시각적 요소

### 10.1 다이어그램
- 시퀀스 다이어그램
  - 컴포넌트 간 상호작용
  - 메시지 흐름
  - 상태 변화
  - 오류 처리

- 상태 다이어그램
  - 상태 전이
  - 이벤트 처리
  - 조건부 전이
  - 오류 상태

- 컴포넌트 다이어그램
  - 컴포넌트 구조
  - 의존성 관계
  - 인터페이스
  - 확장 포인트

### 10.2 코드 블록
- 실행 예시
  - 환경별 실행 방법
  - 옵션 설명
  - 출력 예시
  - 오류 처리

- 설정 예시
  - 환경 변수
  - 설정 파일
  - 기본값
  - 커스터마이징

- API 예시
  - 요청/응답
  - 오류 처리
  - 인증
  - 버전 관리

### 10.3 표
- 요구사항
  - 하드웨어
  - 소프트웨어
  - 네트워크
  - 권한

- 메시지 정의
  - 필드 설명
  - 데이터 타입
  - 필수 여부
  - 예시 값

- 오류 코드
  - 코드
  - 설명
  - 심각도
  - 해결 방법

## 11. 검증 체크리스트

### 11.1 필수 섹션
- [ ] 프로젝트 개요
- [ ] 설치 방법
- [ ] 실행 방법
- [ ] 컴포넌트 설명
- [ ] 예외 처리
- [ ] 환경 설정
  - [ ] 환경 변수 파일 존재 확인
  - [ ] 필수 환경 변수 목록
  - [ ] 환경 변수 설정 방법
  - [ ] 환경 변수 검증 방법
- [ ] 주의사항

### 11.2 코드 품질
- [ ] 코드 예시 검증
- [ ] 설정 예시 검증
- [ ] 명령어 검증
- [ ] 링크 검증

### 11.3 문서 품질
- [ ] 문법 검사
- [ ] 링크 검사
- [ ] 이미지 검사
- [ ] 포맷팅 검사

### 11.4 최신성
- [ ] 버전 정보
- [ ] 변경 이력
- [ ] 의존성 버전
- [ ] 알려진 이슈






